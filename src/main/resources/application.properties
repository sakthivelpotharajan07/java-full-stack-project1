# ===================================================================
# SERVER CONFIGURATION
# ===================================================================
# Port the embedded Tomcat server will listen on.
server.port=8080

# ===================================================================
# DATABASE CONFIGURATION (MySQL)
# ===================================================================
# The JDBC URL for your MySQL database.
# Ensure you have a database named 'zidio_connect_db' created.
spring.datasource.url=jdbc:mysql://localhost:3306/zidio_connect

# Your MySQL username and password.
# IMPORTANT: Use environment variables or a secure vault for these in production.
spring.datasource.username=root
spring.datasource.password=Kumar@02

# The MySQL JDBC driver.
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===================================================================
# JPA / HIBERNATE CONFIGURATION
# ===================================================================
# Hibernate DDL (Data Definition Language) mode.
# 'update': updates the schema if it changes, but doesn't drop data. Good for development.
# Use 'validate' or 'none' in production.
spring.jpa.hibernate.ddl-auto=update

# Show the SQL statements generated by Hibernate in the console. Useful for debugging.
spring.jpa.show-sql=true

# Specify the SQL dialect for MySQL 8+.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# ===================================================================
# SECURITY CONFIGURATION (JWT)
# ===================================================================
# A secure, long, and random secret key for signing JWTs.
# This is much more secure than hardcoding it in the JwtUtil class.
jwt.secret.key=ZidioConnectSuperSecretKeyForJwtGenerationThatIsVeryLongAndSecure12345